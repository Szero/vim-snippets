snippet add "add" i
${1:object}.add('${2:selector expression}')$0
endsnippet

snippet addClass "addClass" i
${1:object}.addClass('${2:class name}')$0
endsnippet

snippet after "after" i
${1:object}.after('${2:Some text <b>and bold!</b>}')$0
endsnippet

snippet ajax "ajax"
$.ajax({
	url: "${1:mydomain.com/url}",
	type: "${2:POST}",
	dataType: "${3:xml/html/script/json}",
	data: $.param( $("${4:Element or Expression}") ),
	complete: function() {
		${5://called when complete}
	},
	success: function() {
		${6://called when successful}
	},
	error: function() {
		${7://called when there is an error}
		},
});
endsnippet

snippet ajaxerror "ajaxerror"
.ajaxError(function(${1:request, settings}) {
	${2://stuff to do when an AJAX call returns an error};
});
${3}
endsnippet

snippet ajaxget "ajaxget"
$.get('${1:/test/ajax-test.xml}', function(xml){
	${2:alert( ("title",xml).text() ) //optional stuff to do after get;}
});
endsnippet

snippet ajaxgetif "ajaxgetif"
$.getIfModified('${1:/test/test.cgi}', function(data){
	${2:alert( "Data loaded: " + data ) //optional stuff to do after get;}
});
endsnippet

snippet ajaxpost "ajaxpost"
$.post('<+/path/to/file.cgi+>',{
	<+<+param1+>: "<+value1+>", <+param2+>: "<+value2+>"+>},
	function(){
		<+//stuff to do after event occurs;+>
});
endsnippet

snippet ajaxsend "ajaxsend"
.ajaxSend(function(${1:request, settings}) {
	${2://stuff to do when an AJAX call returns an error};
});
${3}
endsnippet

snippet ajaxsetup "ajaxsetup"
$.ajaxSetup({
	url: "${1:mydomain.com/url}",
	type: "${2:POST}",
	dataType: "${3:xml/html/script/json}",
	data: $.param( $("${4:Element or Expression}") ),
	complete: function() {
		${5://called when complete}
	},
	success: function() {
		${6://called when successful}
	},
	error: function() {
		${7://called when there is an error}
	},
});
endsnippet

snippet ajaxstart "ajaxstart"
$.ajaxStart(function() {
	${1://stuff to do when an AJAX call is started and no other AJAX calls are in progress};
});
$0
endsnippet

snippet ajaxstop "ajaxstop"
$.ajaxStop(function() {
	${1://stuff to do when an AJAX call is started and no other AJAX calls are in progress};
});
$0
endsnippet

snippet ajaxsuccess "ajaxsuccess"
$.ajaxSuccess(function() {
	${1://stuff to do when an AJAX call is started and no other AJAX calls are in progress};
});
$0
endsnippet

snippet animate "animate"
${1:object}.animate({${2:param1: value1, param2: value2}}, ${3:speed})$0
endsnippet

snippet append "append"
${1:object}.append('${2:Some text <b>and bold!</b>}')$0
endsnippet

snippet appendTo "appendTo"
${1:object}.appendTo('${2:selector expression}')$0
endsnippet

snippet attr "attr"
${1:object}.attr('${2:attribute}', '${3:value}')$0
endsnippet

snippet attrm "attrm"
${1:object}.attr({'${2:attr1}': '${3:value1}', '${4:attr2}': '${5:value2}'})${6}
endsnippet

snippet before "before"
${1:object}.before('${2:Some text <b>and bold!</b>}')$0
endsnippet

snippet bind "bind"
${1:object}.bind('${2:event name}', function(${3:event}) {
	${4:// Act on the event}
});
endsnippet

snippet blur "blur"
${1:object}.blur(function() {
	${2:// Act on the event}
});
endsnippet

snippet change "change"
${1:object}.change(function() {
	${2:// Act on the event}
});
endsnippet

snippet children "children"
${1:object}.children('${2:selector expression}')$0
endsnippet

snippet click "click"
${1:object}.click(function() {
	${2:// Act on the event}
});
endsnippet

snippet clone "clone"
${1:object}.clone()$0
endsnippet

snippet contains "contains"
${1:object}.contains('${2:text to find}')$0
endsnippet

snippet css "css"
${1:object}.css('${2:attribute}', '${3:value}')$0
endsnippet

snippet cssm "cssm"
${1:object}.css({${2:attribute1}: '${3:value1}', ${4:attribute2}: '${5:value2}'});${6}
endsnippet

snippet dblclick "dblclick"
${1:object}.dblclick(function() {
	${2:// Act on the event}
});
endsnippet

snippet each "each"
${1:object}.each(function(index) {
	${2:this.innerHTML = this + " is the element, " + index + " is the position";}
});
endsnippet

snippet el "el"
$('${1}')${2:}
endsnippet

snippet eltrim "eltrim"
$.trim('${1:string}')$0
endsnippet

snippet end "end"
${1:object}.end()$0
endsnippet

snippet error "error"
${1:object}.error(function() {
	${2:// Act on the event}
});
endsnippet

snippet fadein "fadein"
${1:object}.fadeIn('${2:slow/400/fast}')$0
endsnippet

snippet fadeinc "fadeinc"
${1:object}.fadeIn('slow/400/fast', function() {
	${2://Stuff to do *after* the animation takes place};
});
endsnippet

snippet fadeout "fadeout"
${1:object}.fadeOut('${2:slow/400/fast}')$0
endsnippet

snippet fadeoutc "fadeoutc"
${1:object}.fadeOut('slow/400/fast', function() {
	${2://Stuff to do *after* the animation takes place};
});
endsnippet

snippet fadeto "fadeto"
${1:object}.fadeTo('${2:slow/400/fast}', ${3:0.5})$0
endsnippet

snippet fadetoc "fadetoc"
${1:object}.fadeTo('slow/400/fast', ${2:0.5}, function() {
	${3://Stuff to do *after* the animation takes place};
});
endsnippet

snippet filter "filter"
${1:object}.filter('${2:selector expression}')$0
endsnippet

snippet find "find"
${1:object}.find('${2:selector expression}')$0
endsnippet

snippet focus "focus"
${1:object}.focus(function() {
	${2:// Act on the event}
});
endsnippet

snippet get "get"
${1:object}.get(${2:element index})$0
endsnippet

snippet getjson "getjson"
$.getJSON('<+/path/to/file.cgi+>',{
	<+<+param1+>: "<+value1+>", <+param2+>: "<+value2+>"+>},
	function(json){
		<+//stuff to do after event occurs;+>
});
endsnippet

snippet getscript "getscript"
$.getScript('${1:somescript.js}', function(){
	${2://optional stuff to do after getScript;}
});
endsnippet

snippet height "height"
${1:object}.height(${2:integer})$0
endsnippet

snippet hide "hide"
${1:object}.hide('${2:slow/400/fast}')$0
endsnippet

snippet hidec "hidec"
${1:object}.hide('${2:slow/400/fast}', function() {
	${3://Stuff to do *after* the animation takes place}
});
endsnippet

snippet hover "hover"
${1:object}.hover(function() {
	${2:// Stuff to do when the mouse enters the element;}
}, function() {
	${3:// Stuff to do when the mouse leaves the element;}
});$0
endsnippet

snippet html "html"
${1:object}.html('${2:Some text <b>and bold!</b>}')$0
endsnippet

snippet insertAfter "insertAfter"
${1:object}.insertAfter('${2:selector expression}')$0
endsnippet

snippet insertBefore "insertBefore"
${1:object}.insertBefore('${2:selector expression}')$0
endsnippet

snippet is "is"
${1:object}.is('${2:selector expression}')$0
endsnippet

snippet os "object selector" i
$(${1:selector})
endsnippet

snippet load "load"
${1:object}.load(function() {
	${2:// Act on the event}
});
${3}
endsnippet

snippet loadf "loadf"
<+obj+>.load('<+/path/to/file.htm+>', { <+<+param1+>: "<+value1+>", <+param2+>: "<+value2+>"+> }, function() {
	<+// Stuff to do after the page is loaded+>
});snippet loadif
<+obj+>.loadIfModified('<+/path/to/file.htm+>', { <+<+param1+>: "<+value1+>", <+param2+>: "<+value2+>"+> }, function() {
	<+// Stuff to do after the page is loaded+>
});snippet mdown
${1:object}.mousedown(function() {
	${2:// Act on the event}
});
endsnippet

snippet mmove "mmove"
${1:object}.mousemove(function() {
	${2:// Act on the event}
});
endsnippet

snippet mout "mout"
${1:object}.mouseout(function() {
	${2:// Act on the event}
});
endsnippet

snippet mover "mover"
${1:object}.mouseover(function() {
	${2:// Act on the event}
});
endsnippet

snippet mup "mup"
${1:object}.mouseup(function() {
	${2:// Act on the event}
});
endsnippet

snippet next "next"
${1:object}.next('${2:selector expression}')$0
endsnippet

snippet not "not"
${1:object}.not('${2:selector expression}')$0
endsnippet

snippet on "on event function" i
${1:object}.on('${2:event type}', ${3:child selector});$0
endsnippet

snippet one "one"
${1:object}.one('${2:event name}', function(${3:event}) {
	${4:// Act on the event once}
});
endsnippet

snippet parent "parent"
${1:object}.parent('${2:selector expression}')$0
endsnippet

snippet parents "parents"
${1:object}.parents('${2:selector expression}')$0
endsnippet

snippet prepend "prepend"
${1:object}.prepend('${2:Some text <b>and bold!</b>}')$0
endsnippet

snippet prependto "prependto"
${1:object}.prependTo('${2:selector expression}')$0
endsnippet

snippet prev "prev"
${1:object}.prev('${2:selector expression}')$0
endsnippet

snippet ready "ready"
$(function() {
	${1}
});
endsnippet

snippet remove "remove"
${1:object}.remove()$0
endsnippet

snippet removeattr "removeattr"
${1:object}.removeAttr('${2:attribute name}')$0
endsnippet

snippet removeclass "removeclass"
${1:object}.removeClass('${2:class name}')$0
endsnippet

snippet reset "reset"
${1:object}.reset(function() {
	${2:// Act on the event}
});
endsnippet

snippet resize "resize"
${1:object}.resize(function() {
	${2:// Act on the event}
});
endsnippet

snippet scroll "scroll"
${1:object}.scroll(function() {
	${2:// Act on the event}
});
endsnippet

snippet sdown "sdown"
${1:object}.slideDown('${2:slow/400/fast}')$0
endsnippet

snippet sdownc "sdownc"
${1:object}.slideDown('${2:slow/400/fast}', function() {
	${3://Stuff to do *after* the animation takes place};
});
endsnippet

snippet sdupc "sdupc"
${1:object}.slideUp('${2:slow/400/fast}', function() {
	${3://Stuff to do *after* the animation takes place};
});
endsnippet

snippet select "select"
${1:object}.select(function() {
	${2:// Act on the event}
});
endsnippet

snippet show "show"
${1:object}.show('${2:slow/400/fast}')$0
endsnippet

snippet showc "showc"
${1:object}.show('${2:slow/400/fast}', function() {
	${3://Stuff to do *after* the animation takes place}
});
endsnippet

snippet sib "sib"
${1:object}.siblings('${2:selector expression}')$0
endsnippet

snippet size "size"
${1:object}.size()$0
endsnippet

snippet stoggle "stoggle"
${1:object}.slideToggle('${2:slow/400/fast}')$0
endsnippet

snippet submit "submit"
${1:object}.submit(function() {
	${2:// Act on the event once}
});
endsnippet

snippet sup "sup"
${1:object}.slideUp('${2:slow/400/fast}')$0
endsnippet

snippet text "text"
${1:object}.text(${2:'some text'})$0
endsnippet

snippet this "this" i
$(this)${1}
endsnippet

snippet tog "tog"
${1:object}.toggle(function() {
	${2:// Stuff to do every *odd* time the element is clicked;}
}, function() {
	${3:// Stuff to do every *even* time the element is clicked;}
});
${4}
endsnippet

snippet togclass "togclass"
${1:object}.toggleClass('${2:class name}')$0
endsnippet

snippet togsh "togsh"
${1:object}.toggle('${2:slow/400/fast}')$0
endsnippet

snippet trig "trig"
${1:object}.trigger('${2:event name}')$0
endsnippet

snippet unbind "unbind"
${1:object}.unbind('${2:event name}')$0
endsnippet

snippet val "val"
${1:object}.val('${2:text}')$0
endsnippet

snippet width "width"
${1:object}.width(${2:integer})$0
endsnippet

snippet wrap "wrap"
${1:object}.wrap('${2:&lt;div class="extra-wrapper"&gt;&lt;/div&gt;}')$0
endsnippet

# vim:ft=snippets:
